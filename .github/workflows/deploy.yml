name: Push-to-EC2

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Set Gradlew permissions
        run: chmod +x ./gradlew
        
      - name: Clean project
        run: ./gradlew clean

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: List files in build/libs
        run: ls -la ./build/libs

      - name: Check if JAR was created
        run: |
          JAR_FILE=$(find ./build/libs -name "*.jar" -print -quit)
          if [ -n "$JAR_FILE" ]; then
            echo "JAR file exists: $JAR_FILE"
          else
            echo "JAR file does not exist. Exiting."
            exit 1
          fi

      - name: Copy jar to EC2
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{secrets.EC2_SSH_KEY}}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "./build/libs/*.jar"  # Copiar apenas o .jar
          REMOTE_HOST: ${{secrets.EC2_HOST}}
          REMOTE_USER: ${{secrets.EC2_USER}}
          TARGET: "/home/ec2-user/app"  # Diretório específico para a aplicação

      - name: Restart application on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{secrets.EC2_SSH_KEY}} ${{secrets.EC2_USER}}@${{secrets.EC2_HOST}} << 'EOF'
            sudo systemctl restart my-app.service  # Comando para reiniciar o serviço
          EOF

      - name: Check if application is running
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{secrets.EC2_SSH_KEY}} ${{secrets.EC2_USER}}@${{secrets.EC2_HOST}} << 'EOF'
            curl -f http://localhost:8080/health || exit 1  # Verificar status da aplicação
          EOF

      - name: Notify success
        if: success()
        run: echo "Deployment completed successfully!"

      - name: Notify failure
        if: failure()
        run: echo "Deployment failed!"
